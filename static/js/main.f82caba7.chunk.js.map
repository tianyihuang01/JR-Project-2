{"version":3,"sources":["constants/constants.js","components/ContainerTop.js","app/CurrentLeft.js","components/ContainerBottom.js","app/HeaderBottom.js","app/Forecast.js","app/OtherCities.js","app/CurrentRight.js","api/getCurrentAndForecastAxios.js","utils/weekConfig.js","App.js","index.js"],"names":["CITIES","id","name","state","country","coord","lon","lat","BREAKPOINT3","BREAKPOINT2","BREAKPOINT1","Container","styled","div","CurrentTemperature","TextColor","CurrentWeather","ContainerBottom","Divider","TitleBottom","span","Current","temp","weather","humidity","wind","ContainerTop","BottomHeader","h2","ContainerForecast","ContainerWeather","props","display","ForecastWeek","h3","ForecastTemp","Forecast","daily","HeaderBottom","map","index","key","img","src","alt","ContainerCities","CityName","CityTemp","CityDesc","OtherCities","setDefaultCity","console","log","item","onClick","icon","CurrentRight","city","getCurrentAndForecast","a","url","base","axios","method","baseURL","weekday","n","Date","getDay","slice","Card","CardTop","padding","CardBottom","DividerBottom","hr","cities","App","defaultCity","newWeather","undefined","defaultWeather","setWeather","bind","this","setState","filter","find","i","length","data","push","nanoid","Math","trunc","current","main","wind_speed","weekdayList","day","CurrentLeft","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f82caba7.chunk.js","sourcesContent":["export const CITIES = {\r\n\tMELBOURNE: {\r\n\t\tid: 2158177,\r\n\t\tname: 'Melbourne',\r\n\t\tstate: '',\r\n\t\tcountry: 'AU',\r\n\t\tcoord: {\r\n\t\t\tlon: 144.963318,\r\n\t\t\tlat: -37.813999,\r\n\t\t},\r\n\t},\r\n\tSYDNEY: {\r\n\t\tid: 2147714,\r\n\t\tname: 'Sydney',\r\n\t\tstate: '',\r\n\t\tcountry: 'AU',\r\n\t\tcoord: {\r\n\t\t\tlon: 151.207321,\r\n\t\t\tlat: -33.867851,\r\n\t\t},\r\n\t},\r\n\tBRISBANE: {\r\n\t\tid: 7839562,\r\n\t\tname: 'Brisbane',\r\n\t\tstate: '',\r\n\t\tcountry: 'AU',\r\n\t\tcoord: {\r\n\t\t\tlon: 153.029938,\r\n\t\t\tlat: -27.44573,\r\n\t\t},\r\n\t},\r\n\tPERTH: {\r\n\t\tid: 2153391,\r\n\t\tname: 'Perth',\r\n\t\tstate: '',\r\n\t\tcountry: 'AU',\r\n\t\tcoord: {\r\n\t\t\tlon: 115.872223,\r\n\t\t\tlat: -31.99884,\r\n\t\t},\r\n\t},\r\n};\r\n\r\nexport const API = '999f0f8fefdcfd98119382216ae94e89';\r\n\r\n// export const API = '2466213f21b4b723d341e00a430a7673';\r\n\r\nexport const BREAKPOINT3 = 1024;\r\n\r\nexport const BREAKPOINT2 = 720;\r\n\r\nexport const BREAKPOINT1 = 320;\r\n","import styled from 'styled-components';\r\nimport { BREAKPOINT2, BREAKPOINT1 } from '../constants/constants';\r\n\r\nconst Container = styled.div`\r\n\tpadding: 0 96px;\r\n\r\n\t@media only screen and (max-width: ${BREAKPOINT1}px) {\r\n\t\tpadding: 0 20px;\r\n\t}\r\n\r\n\t@media only screen and (max-width: ${BREAKPOINT2}px) and (min-width: ${BREAKPOINT1}px) {\r\n\t\tpadding: 0 50px;\r\n\t}\r\n`;\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\r\n\r\nimport ContainerTop from '../components/ContainerTop';\r\n\r\nconst CurrentTemperature = styled.div`\r\n\tmargin: 0;\r\n\ttext-align: center;\r\n\tfont-size: 5rem;\r\n`;\r\n\r\nconst TextColor = styled.div`\r\n\tcolor: hsla(0, 0%, 100%, 0.7);\r\n\ttext-align: center;\r\n`;\r\n\r\nconst CurrentWeather = styled(TextColor)`\r\n\tfont-size: 1.5rem;\r\n\tletter-spacing: 5px;\r\n`;\r\n\r\nconst ContainerBottom = styled(TextColor)`\r\n\tmargin-top: 3rem;\r\n\tdisplay: flex;\r\n\tflex-direction: space-around;\r\n\tfont-size: 1rem;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n\twidth: 3px;\r\n\tmargin: 0 32px;\r\n\tbackground-color: hsla(0, 0%, 100%, 0.7);\r\n`;\r\n\r\nconst TitleBottom = styled.span`\r\n\tdisplay: inline-block;\r\n\tmargin-bottom: 0.75rem;\r\n`;\r\n\r\nconst Current = ({ temp, weather, humidity, wind }) => (\r\n\t<ContainerTop>\r\n\t\t<CurrentTemperature>\r\n\t\t\t<span>\r\n\t\t\t\t<span>{temp}</span>\r\n\t\t\t</span>\r\n\t\t</CurrentTemperature>\r\n\t\t<CurrentWeather>\r\n\t\t\t<span>{weather}</span>\r\n\t\t</CurrentWeather>\r\n\t\t<ContainerBottom>\r\n\t\t\t<div>\r\n\t\t\t\t<TitleBottom>HUMIDITY</TitleBottom>\r\n\t\t\t\t<br />\r\n\t\t\t\t<span>{humidity}</span>\r\n\t\t\t</div>\r\n\t\t\t<Divider />\r\n\t\t\t<div>\r\n\t\t\t\t<TitleBottom>WIND</TitleBottom>\r\n\t\t\t\t<br />\r\n\t\t\t\t<span>{wind}</span>\r\n\t\t\t</div>\r\n\t\t</ContainerBottom>\r\n\t</ContainerTop>\r\n);\r\n\r\nexport default Current;\r\n","import styled from 'styled-components';\r\nimport { BREAKPOINT2, BREAKPOINT1 } from '../constants/constants';\r\nconst ContainerBottom = styled.div`\r\n\tpadding: 0 48px;\r\n\tborder: 0;\r\n\r\n\t@media only screen and (max-width: ${BREAKPOINT1}px) {\r\n\t\tpadding: 0 20px;\r\n\t}\r\n\r\n\t@media only screen and (max-width: ${BREAKPOINT2}px) and (min-width: ${BREAKPOINT1}px) {\r\n\t\tpadding: 0 30px;\r\n\t}\r\n`;\r\n\r\nexport default ContainerBottom;\r\n","import styled from 'styled-components';\r\n\r\nconst BottomHeader = styled.h2`\r\n\tmargin-bottom: 1rem;\r\n\tfont-size: 1.5rem;\r\n\tmargin: 0 0 0.5rem;\r\n\tletter-spacing: 2px;\r\n\tfont-weight: 300;\r\n`;\r\n\r\nexport default BottomHeader;","import styled from 'styled-components';\r\nimport { BREAKPOINT2 } from '../constants/constants';\r\nimport ContainerBottom from '../components/ContainerBottom';\r\nimport HeaderBottom from './HeaderBottom';\r\n\r\nconst ContainerForecast = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tmin-width: 280px;\r\n\tjustify-content: center;\r\n\r\n\t@media only screen and (max-width: ${BREAKPOINT2}px) {\r\n\t\tmin-width: auto;\r\n\t}\r\n\r\n\t${\r\n\t\t'' /* @media only screen and (max-width: ${BREAKPOINT2}px) and (min-width: ${BREAKPOINT1}px) {\r\n\t\tmin-width: auto;\r\n\t} */\r\n\t}\r\n`;\r\n\r\nconst ContainerWeather = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\ttext-align: center;\r\n\twidth: 50px;\r\n\tmargin: 0 10px;\r\n\r\n\t@media only screen and (max-width: ${BREAKPOINT2}px) {\r\n\t\tdisplay: ${(props) => (props.display >= 3 ? 'none' : 'block')};\r\n\t}\r\n`;\r\n\r\nconst ForecastWeek = styled.h3`\r\n\tfont-weight: 400;\r\n\tletter-spacing: 1px;\r\n\tmargin: 0.85rem 0 0.66rem;\r\n`;\r\n\r\nconst ForecastTemp = styled.div`\r\n\tfont-size: 1.25rem;\r\n\tcolor: rgba(0, 0, 0, 0.5);\r\n\tmargin-right: 10px;\r\n\tmargin: 0.6em 0 0 0;\r\n`;\r\n\r\nconst Forecast = ({ daily }) => {\r\n\treturn (\r\n\t\t<ContainerBottom>\r\n\t\t\t<HeaderBottom>Forecast</HeaderBottom>\r\n\t\t\t<ContainerForecast>\r\n\t\t\t\t{daily.map(({ key, img, temp }, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ContainerWeather key={key} display={index}>\r\n\t\t\t\t\t\t\t<ForecastWeek>{key}</ForecastWeek>\r\n\t\t\t\t\t\t\t<img src={img} alt=\"Clouds\" />\r\n\t\t\t\t\t\t\t<ForecastTemp>{temp}</ForecastTemp>\r\n\t\t\t\t\t\t</ContainerWeather>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ContainerForecast>\r\n\t\t</ContainerBottom>\r\n\t);\r\n};\r\n\r\nexport default Forecast;\r\n","import styled from 'styled-components';\r\n\r\nimport { BREAKPOINT2 } from '../constants/constants';\r\nimport ContainerBottom from '../components/ContainerBottom';\r\nimport HeaderBottom from './HeaderBottom';\r\n\r\nconst ContainerCities = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tfont-size: 1.5rem;\r\n\ttext-align: left;\r\n\twidth: 100%;\r\n\tletter-spacing: 2px;\r\n\tfont-weight: 400;\r\n\tfont-size: 1rem;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst CityName = styled.h3`\r\n\tfont-weight: 400;\r\n\twidth: 95px;\r\n\tletter-spacing: 1px;\r\n\tmargin: 0px 10px;\r\n\tcursor: pointer;\r\n`;\r\n\r\nconst CityTemp = styled.div`\r\n\tfont-size: 1.25rem;\r\n\tcolor: rgba(0, 0, 0, 0.5);\r\n\tmargin-right: 10px;\r\n\twidth: 40px;\r\n`;\r\n\r\nconst CityDesc = styled.h3`\r\n\tfont-weight: 400;\r\n\tcolor: rgba(0, 0, 0, 0.5);\r\n\twidth: 60px;\r\n\tletter-spacing: 1px;\r\n\tmargin: 0px 10px;\r\n\tpadding-left: 20px;\r\n\tdisplay: none;\r\n\t@media only screen and (min-width: ${BREAKPOINT2}px) {\r\n\t\tdisplay: block;\r\n\t}\r\n`;\r\n\r\nconst OtherCities = ({ weather, setDefaultCity }) => {\r\n\tconsole.log('other city rendered！！');\r\n\r\n\treturn (\r\n\t\t<ContainerBottom>\r\n\t\t\t<HeaderBottom>Other Cities</HeaderBottom>\r\n\t\t\t{weather.map((item) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ContainerCities key={item.id}>\r\n\t\t\t\t\t\t<CityName onClick={() => setDefaultCity(item.name)}>\r\n\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t</CityName>\r\n\t\t\t\t\t\t<CityTemp>{item.temp}</CityTemp>\r\n\t\t\t\t\t\t<img src={item.icon} alt=\"Clouds\" />\r\n\t\t\t\t\t\t<CityDesc>{item.weather}</CityDesc>\r\n\t\t\t\t\t</ContainerCities>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ContainerBottom>\r\n\t);\r\n};\r\n\r\nexport default OtherCities;\r\n","import styled from 'styled-components';\r\n\r\nimport ContainerTop from '../components/ContainerTop';\r\n\r\nconst CityName = styled.div`\r\n\tmargin-top: 16px;\r\n\tfont-size: 2rem;\r\n\ttext-align: center;\r\n\r\n\t&::after {\r\n\t\tcontent: '';\r\n\t\theight: 2px;\r\n\t\twidth: 90px;\r\n\t\tmargin: 10px auto;\r\n\t\tdisplay: block;\r\n\t\tbackground: white;\r\n\t}\r\n`;\r\n\r\nconst CurrentRight = ({ city }) => (\r\n\t<ContainerTop>\r\n\t\t<CityName>{city}</CityName>\r\n\t</ContainerTop>\r\n);\r\n\r\nexport default CurrentRight;\r\n","import axios from 'axios';\r\nimport { API } from '../constants/constants';\r\n\r\nconst getCurrentAndForecast = async (city) => {\r\n\tconst base = 'https://api.openweathermap.org/data/2.5/onecall?';\r\n\tconst units = 'metric';\r\n\tconst exclude = 'minutely,hourly,alerts';\r\n\tconst url = `${base}lat=${city.lat}&lon=${city.lon}&exclude=${exclude}&appid=${API}&units=${units}`;\r\n\treturn axios({ method: 'get', url: `${url}`, baseURL: `${base}` });\r\n};\r\n\r\nexport default getCurrentAndForecast;\r\n","export const weekday = () => {\r\n\tconst d = new Date();\r\n\tconst n = d.getDay();\r\n\tconst weekdayList = [\r\n\t\t'MON',\r\n\t\t'TUE',\r\n\t\t'WED',\r\n\t\t'THU',\r\n\t\t'FRI',\r\n\t\t'SAT',\r\n\t\t'SUN',\r\n\t\t'MON',\r\n\t\t'TUE',\r\n\t\t'WED',\r\n\t\t'THU',\r\n\t\t'FRI',\r\n\t\t'SAT',\r\n\t\t'SUN',\r\n\t];\r\n\treturn weekdayList.slice(n, n + 5);\r\n};\r\n\r\nexport const weekList = (weekdayList, daily) => [\r\n\t{\r\n\t\tkey: weekdayList[0],\r\n\t\timg: `https://openweathermap.org/img/wn/${daily[0].weather[0].icon}.png`,\r\n\t\ttemp: `${Math.trunc(daily[0].temp.day)}°`,\r\n\t},\r\n\t{\r\n\t\tkey: weekdayList[1],\r\n\t\timg: `https://openweathermap.org/img/wn/${daily[1].weather[0].icon}.png`,\r\n\t\ttemp: `${Math.trunc(daily[1].temp.day)}°`,\r\n\t},\r\n\t{\r\n\t\tkey: weekdayList[2],\r\n\t\timg: `https://openweathermap.org/img/wn/${daily[2].weather[0].icon}.png`,\r\n\t\ttemp: `${Math.trunc(daily[2].temp.day)}°`,\r\n\t},\r\n\t{\r\n\t\tkey: weekdayList[3],\r\n\t\timg: `https://openweathermap.org/img/wn/${daily[3].weather[0].icon}.png`,\r\n\t\ttemp: `${Math.trunc(daily[3].temp.day)}°`,\r\n\t},\r\n\t{\r\n\t\tkey: weekdayList[4],\r\n\t\timg: `https://openweathermap.org/img/wn/${daily[4].weather[0].icon}.png`,\r\n\t\ttemp: `${Math.trunc(daily[4].temp.day)}°`,\r\n\t},\r\n];\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport { nanoid } from 'nanoid';\n\nimport CurrentLeft from './app/CurrentLeft';\nimport Forecast from './app/Forecast';\nimport OtherCities from './app/OtherCities';\nimport CurrentRight from './app/CurrentRight';\n\n// import getCurrentAndForecast from './api/getCurrentAndForecast';\nimport getCurrentAndForecast from './api/getCurrentAndForecastAxios';\nimport { CITIES, BREAKPOINT3 } from './constants/constants';\nimport { weekday, weekList } from './utils/weekConfig';\n\nconst Container = styled.div`\n\twidth: 100%;\n\tmin-height: 100vh;\n\tbackground-image: url(https://wallpaperaccess.com/full/2629319.png);\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\tbackground-position: center;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nconst Card = styled.div`\n\tmargin: 60px;\n\tbackground: #fff;\n\tborder-radius: 32px;\n\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n`;\n\nconst CardTop = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tpadding: ${(props) => (props.padding ? '80px 80px' : '64px 0')};\n\tbackground-image: url(https://i.imgur.com/GhQZhaO.jpg);\n\tbackground-size: cover;\n\tborder-top-left-radius: 32px;\n\tborder-top-right-radius: 32px;\n\tcolor: #fff;\n\tposition: relative;\n\n\t@media only screen and (max-width: ${BREAKPOINT3}px) {\n\t\tflex-direction: column-reverse;\n\t}\n`;\n\nconst CardBottom = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tpadding: ${(props) => (props.padding ? '80px 80px' : '36px 0')};\n\t\n\t@media only screen and (max-width: ${BREAKPOINT3}px) {\n\t\tflex-direction: column;\n\t}\n}\n`;\n\nconst DividerBottom = styled.hr`\n\twidth: 2px;\n\tbackground-color: rgba(0, 0, 0, 0.1);\n\n\t@media only screen and (max-width: ${BREAKPOINT3}px) {\n\t\twidth: 90%;\n\t}\n`;\n\nconst cities = [\n\t{\n\t\tname: CITIES.MELBOURNE.name,\n\t\tlat: CITIES.MELBOURNE.coord.lat,\n\t\tlon: CITIES.MELBOURNE.coord.lon,\n\t},\n\t{\n\t\tname: CITIES.SYDNEY.name,\n\t\tlat: CITIES.SYDNEY.coord.lat,\n\t\tlon: CITIES.SYDNEY.coord.lon,\n\t},\n\t{\n\t\tname: CITIES.BRISBANE.name,\n\t\tlat: CITIES.BRISBANE.coord.lat,\n\t\tlon: CITIES.BRISBANE.coord.lon,\n\t},\n\t{\n\t\tname: CITIES.PERTH.name,\n\t\tlat: CITIES.PERTH.coord.lat,\n\t\tlon: CITIES.PERTH.coord.lon,\n\t},\n];\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tweather: undefined,\n\t\t\tdefaultWeather: undefined,\n\t\t};\n\n\t\tthis.setWeather = this.setWeather.bind(this);\n\t\tthis.setDefaultCity = this.setDefaultCity.bind(this);\n\t}\n\n\tdefaultCity = CITIES.MELBOURNE.name;\n\tnewWeather = [];\n\n\tsetWeather() {\n\t\tthis.setState({\n\t\t\tweather: this.newWeather.filter((item) => item.name !== this.defaultCity),\n\t\t\tdefaultWeather: this.newWeather.find(\n\t\t\t\t(item) => item.name === this.defaultCity\n\t\t\t),\n\t\t});\n\t}\n\n\tsetDefaultCity(city) {\n\t\tthis.defaultCity = city;\n\t\tthis.setWeather();\n\t\tconsole.log('setDefaultCity');\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getCurrentAndForecast();\n\t}\n\n\tasync getCurrentAndForecast() {\n\t\tfor (let i = 0; i < cities.length; i++) {\n\t\t\tconst { data } = await getCurrentAndForecast(cities[i]);\n\t\t\tconsole.log(data);\n\t\t\tthis.newWeather.push({\n\t\t\t\tid: nanoid(),\n\t\t\t\tname: cities[i].name,\n\t\t\t\ttemp: `${Math.trunc(data.current.temp)}°`,\n\t\t\t\tweather: data.current.weather[0].main,\n\t\t\t\thumidity: `${data.current.humidity}%`,\n\t\t\t\twind: `${data.current.wind_speed}M/S`,\n\t\t\t\ticon: `https://openweathermap.org/img/wn/${data.current.weather[0].icon}.png`,\n\t\t\t\tdaily: weekList(weekday(), data.daily),\n\t\t\t});\n\t\t\tconsole.log('API CALLED!!');\n\t\t}\n\n\t\tthis.setWeather();\n\t}\n\n\trender() {\n\t\tconst { weather, defaultWeather } = this.state;\n\t\tif (!weather) {\n\t\t\treturn (\n\t\t\t\t<Container>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<CardTop padding>LOADING......</CardTop>\n\t\t\t\t\t\t<CardBottom padding>LOADING......</CardBottom>\n\t\t\t\t\t</Card>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTop>\n\t\t\t\t\t\t<CurrentLeft\n\t\t\t\t\t\t\ttemp={defaultWeather.temp}\n\t\t\t\t\t\t\tweather={defaultWeather.weather}\n\t\t\t\t\t\t\thumidity={defaultWeather.humidity}\n\t\t\t\t\t\t\twind={defaultWeather.wind}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CurrentRight city={defaultWeather.name} />\n\t\t\t\t\t</CardTop>\n\t\t\t\t\t<CardBottom>\n\t\t\t\t\t\t<OtherCities\n\t\t\t\t\t\t\tweather={weather}\n\t\t\t\t\t\t\tsetDefaultCity={this.setDefaultCity}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DividerBottom />\n\t\t\t\t\t\t<Forecast daily={defaultWeather.daily} />\n\t\t\t\t\t</CardBottom>\n\t\t\t\t</Card>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/ContainerTop/ContainerTop.js","app/CurrentLeft/CurrentLeft.js","components/ContainerBottom/ContainerBottom.js","app/HeaderBottom/HeaderBottom.js","app/Forecast/Forecast.js","app/OtherCities/OtherCities.js","app/CurrentRight/CurrentRight.js","constants/constants.js","api/getCurrentAndForecast/getCurrentAndForecast.js","utils/weekConfig.js","App.js","index.js"],"names":["Container","styled","div","CurrentTemperature","TextColor","CurrentWeather","ContainerBottom","Divider","TitleBottom","span","Current","temp","weather","humidity","wind","ContainerTop","BottomHeader","h2","ContainerForecast","ContainerWeather","ForecastWeek","h3","ForecastTemp","Forecast","daily","HeaderBottom","map","key","img","src","alt","ContainerCities","CityName","CityTemp","OtherCities","console","log","item","name","icon","id","CurrentRight","city","CITIES","state","country","coord","lon","lat","getCurrentAndForecast","cities","setWeather","data","xhttp","XMLHttpRequest","loop","i","length","url","open","onreadystatechange","this","readyState","status","push","JSON","parse","responseText","send","weekday","n","Date","getDay","slice","Card","CardTop","props","padding","CardBottom","DividerBottom","defaultCity","App","defaultIndex","findIndex","undefined","defaultWeather","bind","newWeather","setState","filter","output","forEach","index","weekdayList","nanoid","Math","trunc","current","main","wind_speed","day","CurrentLeft","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAOeA,EAJGC,IAAOC,IAAV,gD,OCUTC,EAAqBF,IAAOC,IAAV,qFAMlBE,EAAYH,IAAOC,IAAV,qFAKTG,EAAiBJ,YAAOG,EAAPH,CAAH,0EAKdK,EAAkBL,YAAOG,EAAPH,CAAH,wHAOfM,EAAUN,IAAOC,IAAV,2GAMPM,EAAcP,IAAOQ,KAAV,iFA+BFC,EA1BC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,KAA5B,OACf,eAACC,EAAD,WACC,cAACZ,EAAD,UACC,+BACC,+BAAOQ,QAGT,cAACN,EAAD,UACC,+BAAOO,MAER,eAACN,EAAD,WACC,gCACC,cAACE,EAAD,uBACA,uBACA,+BAAOK,OAER,cAACN,EAAD,IACA,gCACC,cAACC,EAAD,mBACA,uBACA,+BAAOM,cC5DIR,EALSL,IAAOC,IAAV,8DCQNc,EARMf,IAAOgB,GAAV,8ICIZC,EAAoBjB,IAAOC,IAAV,8HAOjBiB,EAAmBlB,IAAOC,IAAV,2JAShBkB,EAAenB,IAAOoB,GAAV,uGAMZC,EAAerB,IAAOC,IAAV,gIAwBHqB,EAjBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACC,eAAC,EAAD,WACC,cAACC,EAAD,uBACA,cAACP,EAAD,UACEM,EAAME,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,IAAKjB,EAAb,EAAaA,KAAb,OACV,eAACQ,EAAD,WACC,cAACC,EAAD,UAAeO,IACf,qBAAKE,IAAKD,EAAKE,IAAI,WACnB,cAACR,EAAD,UAAeX,MAHOgB,YClCtBI,EAAkB9B,IAAOC,IAAV,kMAWf8B,GAAW/B,IAAOoB,GAAV,0GAORY,GAAWhC,IAAOC,IAAV,wHA0BCgC,GAnBK,SAAC,GAAiB,IAAftB,EAAc,EAAdA,QAEtB,OADAuB,QAAQC,IAAIxB,GAEX,eAAC,EAAD,WACC,cAACa,EAAD,2BACCb,EAAQc,KAAI,SAACW,GACb,GAAIA,EACH,OACC,eAACN,EAAD,WACC,cAACC,GAAD,UAAWK,EAAKC,OAChB,cAACL,GAAD,UAAWI,EAAK1B,OAChB,qBAAKkB,IAAKQ,EAAKE,KAAMT,IAAI,aAHJO,EAAKG,WCpC3BR,GAAW/B,IAAOC,IAAV,wMAmBCuC,GANM,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACpB,cAAC3B,EAAD,UACC,cAAC,GAAD,UAAW2B,OCnBAC,GACD,CACVH,GAAI,QACJF,KAAM,YACNM,MAAO,GACPC,QAAS,KACTC,MAAO,CACNC,IAAK,WACLC,KAAM,YARIL,GAWJ,CACPH,GAAI,QACJF,KAAM,SACNM,MAAO,GACPC,QAAS,KACTC,MAAO,CACNC,IAAK,WACLC,KAAM,YAlBIL,GAqBF,CACTH,GAAI,QACJF,KAAM,WACNM,MAAO,GACPC,QAAS,KACTC,MAAO,CACNC,IAAK,WACLC,KAAM,WA5BIL,GA+BN,CACLH,GAAI,QACJF,KAAM,QACNM,MAAO,GACPC,QAAS,KACTC,MAAO,CACNC,IAAK,WACLC,KAAM,WCRMC,GA5Be,SAACC,EAAQC,GACtC,IAGIC,EAAO,GAELC,EAAQ,IAAIC,gBAElB,SAAUC,EAAKC,EAAGC,GACjB,GAAID,GAAKC,EAERN,EAAWC,OAFZ,CAKA,IAAMM,EAAG,UAbG,mDAaH,eAAiBR,EAAOM,GAAGR,IAA3B,gBAAsCE,EAAOM,GAAGT,IAAhD,oBAXM,yBAWN,kBD2BQ,mCC3BR,kBAZI,UAabM,EAAMM,KAAK,MAAOD,GAAK,GACvBL,EAAMO,mBAAqB,WACH,GAAnBC,KAAKC,YAAkC,KAAfD,KAAKE,SAChCX,EAAKY,KAAKC,KAAKC,MAAMb,EAAMc,eAG3BZ,EAAKC,EAAI,EAAGC,KAGdJ,EAAMe,QAhBP,CAiBG,EAAGlB,EAAOO,SC3BDY,GAAU,WACtB,IACMC,GADI,IAAIC,MACFC,SAiBZ,MAhBoB,CACnB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEkBC,MAAMH,EAAGA,EAAI,ICD3BtE,GAAYC,IAAOC,IAAV,4SAYTwE,GAAOzE,IAAOC,IAAV,yIAOJyE,GAAU1E,IAAOC,IAAV,uRAGD,SAAC0E,GAAD,OAAYA,EAAMC,QAAU,YAAc,YAShDC,GAAa7E,IAAOC,IAAV,6FAOV6E,GAAgB9E,IAAOC,IAAV,oFAKbgD,GAAS,CACd,CACCZ,KAAMK,GAAiBL,KACvBU,IAAKL,GAAiBG,MAAME,IAC5BD,IAAKJ,GAAiBG,MAAMC,KAE7B,CACCT,KAAMK,GAAcL,KACpBU,IAAKL,GAAcG,MAAME,IACzBD,IAAKJ,GAAcG,MAAMC,KAE1B,CACCT,KAAMK,GAAgBL,KACtBU,IAAKL,GAAgBG,MAAME,IAC3BD,IAAKJ,GAAgBG,MAAMC,KAE5B,CACCT,KAAMK,GAAaL,KACnBU,IAAKL,GAAaG,MAAME,IACxBD,IAAKJ,GAAaG,MAAMC,MAIpBiC,GAAcrC,GAAiBL,KAuFtB2C,G,kDApFd,WAAYL,GAAQ,IAAD,8BAClB,cAAMA,IAkBPM,aAAehC,GAAOiC,WAAU,SAAC9C,GAAD,OAAUA,EAAKC,OAAS0C,MAhBvD,EAAKpC,MAAQ,CACZhC,aAASwE,EACTC,oBAAgBD,GAGjB,EAAKjC,WAAa,EAAKA,WAAWmC,KAAhB,gBARA,E,8CAWnB,SAAWC,GACV1B,KAAK2B,SAAS,CACb5E,QAAS2E,EAAWE,QAAO,SAACpD,GAAD,OAAUA,EAAKC,OAAS0C,MACnDK,eAAgBE,EAAW1B,KAAKqB,kB,+BAOlC,WAAqB,IAAD,OACfQ,EAAS,GAEbzC,GAAsBC,IAAQ,SAACE,GAC9BA,EAAKuC,SAAQ,SAACtD,EAAMuD,GD1FC,IAACC,EAAarE,EC2FlCkE,EAAO1B,KAAK,CACXxB,GAAIsD,cACJxD,KAAMY,GAAO0C,GAAOtD,KACpB3B,KAAK,GAAD,OAAKoF,KAAKC,MAAM3D,EAAK4D,QAAQtF,MAA7B,QACJC,QAASyB,EAAK4D,QAAQrF,QAAQ,GAAGsF,KACjCrF,SAAS,GAAD,OAAKwB,EAAK4D,QAAQpF,SAAlB,MACRC,KAAK,GAAD,OAAKuB,EAAK4D,QAAQE,WAAlB,QACJ5D,KAAK,oCAAD,OAAsCF,EAAK4D,QAAQrF,QAAQ,GAAG2B,KAA9D,QACJf,ODnGoBqE,ECmGJxB,KDnGiB7C,ECmGNa,EAAKb,MDnGW,CAC/C,CACCG,IAAKkE,EAAY,GACjBjE,IAAI,oCAAD,OAAsCJ,EAAM,GAAGZ,QAAQ,GAAG2B,KAA1D,QACH5B,KAAK,GAAD,OAAKoF,KAAKC,MAAMxE,EAAM,GAAGb,KAAKyF,KAA9B,SAEL,CACCzE,IAAKkE,EAAY,GACjBjE,IAAI,oCAAD,OAAsCJ,EAAM,GAAGZ,QAAQ,GAAG2B,KAA1D,QACH5B,KAAK,GAAD,OAAKoF,KAAKC,MAAMxE,EAAM,GAAGb,KAAKyF,KAA9B,SAEL,CACCzE,IAAKkE,EAAY,GACjBjE,IAAI,oCAAD,OAAsCJ,EAAM,GAAGZ,QAAQ,GAAG2B,KAA1D,QACH5B,KAAK,GAAD,OAAKoF,KAAKC,MAAMxE,EAAM,GAAGb,KAAKyF,KAA9B,SAEL,CACCzE,IAAKkE,EAAY,GACjBjE,IAAI,oCAAD,OAAsCJ,EAAM,GAAGZ,QAAQ,GAAG2B,KAA1D,QACH5B,KAAK,GAAD,OAAKoF,KAAKC,MAAMxE,EAAM,GAAGb,KAAKyF,KAA9B,SAEL,CACCzE,IAAKkE,EAAY,GACjBjE,IAAI,oCAAD,OAAsCJ,EAAM,GAAGZ,QAAQ,GAAG2B,KAA1D,QACH5B,KAAK,GAAD,OAAKoF,KAAKC,MAAMxE,EAAM,GAAGb,KAAKyF,KAA9B,aC6EFjE,QAAQC,IAAIsD,MAEb,EAAKvC,WAAWuC,Q,oBAIlB,WACC,MAAoC7B,KAAKjB,MAAjChC,EAAR,EAAQA,QAASyE,EAAjB,EAAiBA,eAMjB,OAAKzE,EAaJ,cAAC,GAAD,UACC,eAAC8D,GAAD,WACC,eAACC,GAAD,WACC,cAAC0B,EAAD,CACC1F,KAAM0E,EAAe1E,KACrBC,QAASyE,EAAezE,QACxBC,SAAUwE,EAAexE,SACzBC,KAAMuE,EAAevE,OAEtB,cAAC,GAAD,CAAc4B,KAAM2C,EAAe/C,UAEpC,eAACwC,GAAD,WACC,cAAC,GAAD,CAAalE,QAASA,IACtB,cAACmE,GAAD,IACA,cAAC,EAAD,CAAUvD,MAAO6D,EAAe7D,gBAxBlC,cAAC,GAAD,UACC,eAACkD,GAAD,WACC,cAACC,GAAD,CAASE,SAAO,EAAhB,2BACA,cAACC,GAAD,qC,GAxDYwB,IAAMC,WChFxBC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,GAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.dbfee210.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n\tpadding: 0 96px;\r\n`;\r\n\r\nexport default Container;\r\n","// import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport ContainerTop from '../../components/ContainerTop/ContainerTop';\r\n\r\n// const Loading = styled.div`\r\n// \tfont-size: 3rem;\r\n// `;\r\n\r\n// const Container = styled.div`\r\n// \tpadding: 0 96px;\r\n// `;\r\n\r\nconst CurrentTemperature = styled.div`\r\n\tmargin: 0;\r\n\ttext-align: center;\r\n\tfont-size: 5rem;\r\n`;\r\n\r\nconst TextColor = styled.div`\r\n\tcolor: hsla(0, 0%, 100%, 0.7);\r\n\ttext-align: center;\r\n`;\r\n\r\nconst CurrentWeather = styled(TextColor)`\r\n\tfont-size: 1.5rem;\r\n\tletter-spacing: 5px;\r\n`;\r\n\r\nconst ContainerBottom = styled(TextColor)`\r\n\tmargin-top: 3rem;\r\n\tdisplay: flex;\r\n\tflex-direction: space-around;\r\n\tfont-size: 1rem;\r\n`;\r\n\r\nconst Divider = styled.div`\r\n\twidth: 3px;\r\n\tmargin: 0 32px;\r\n\tbackground-color: hsla(0, 0%, 100%, 0.7);\r\n`;\r\n\r\nconst TitleBottom = styled.span`\r\n\tdisplay: inline-block;\r\n\tmargin-bottom: 0.75rem;\r\n`;\r\n\r\nconst Current = ({ temp, weather, humidity, wind }) => (\r\n\t<ContainerTop>\r\n\t\t<CurrentTemperature>\r\n\t\t\t<span>\r\n\t\t\t\t<span>{temp}</span>\r\n\t\t\t</span>\r\n\t\t</CurrentTemperature>\r\n\t\t<CurrentWeather>\r\n\t\t\t<span>{weather}</span>\r\n\t\t</CurrentWeather>\r\n\t\t<ContainerBottom>\r\n\t\t\t<div>\r\n\t\t\t\t<TitleBottom>HUMIDITY</TitleBottom>\r\n\t\t\t\t<br />\r\n\t\t\t\t<span>{humidity}</span>\r\n\t\t\t</div>\r\n\t\t\t<Divider />\r\n\t\t\t<div>\r\n\t\t\t\t<TitleBottom>WIND</TitleBottom>\r\n\t\t\t\t<br />\r\n\t\t\t\t<span>{wind}</span>\r\n\t\t\t</div>\r\n\t\t</ContainerBottom>\r\n\t</ContainerTop>\r\n);\r\n\r\nexport default Current;\r\n","import styled from 'styled-components';\r\n\r\nconst ContainerBottom = styled.div`\r\n\tpadding: 0 48px;\r\n\tborder: 0;\r\n`;\r\n\r\nexport default ContainerBottom;\r\n","import styled from 'styled-components';\r\n\r\nconst BottomHeader = styled.h2`\r\n\tmargin-bottom: 1rem;\r\n\tfont-size: 1.5rem;\r\n\tmargin: 0 0 0.5rem;\r\n\tletter-spacing: 2px;\r\n\tfont-weight: 300;\r\n`;\r\n\r\nexport default BottomHeader;","// import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport ContainerBottom from '../../components/ContainerBottom/ContainerBottom';\r\nimport HeaderBottom from '../HeaderBottom/HeaderBottom';\r\n\r\nconst ContainerForecast = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tmin-width: 280px;\r\n`;\r\n\r\nconst ContainerWeather = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\ttext-align: center;\r\n\twidth: 50px;\r\n\tmargin: 0 10px;\r\n`;\r\n\r\nconst ForecastWeek = styled.h3`\r\n\tfont-weight: 400;\r\n\tletter-spacing: 1px;\r\n\tmargin: 0.85rem 0 0.66rem;\r\n`;\r\n\r\nconst ForecastTemp = styled.div`\r\n\tfont-size: 1.25rem;\r\n\tcolor: rgba(0, 0, 0, 0.5);\r\n\tmargin-right: 10px;\r\n\tmargin: 0.6em 0 0 0;\r\n`;\r\n\r\nconst Forecast = ({ daily }) => {\r\n\treturn (\r\n\t\t<ContainerBottom>\r\n\t\t\t<HeaderBottom>Forecast</HeaderBottom>\r\n\t\t\t<ContainerForecast>\r\n\t\t\t\t{daily.map(({ key, img, temp }) => (\r\n\t\t\t\t\t<ContainerWeather key={key}>\r\n\t\t\t\t\t\t<ForecastWeek>{key}</ForecastWeek>\r\n\t\t\t\t\t\t<img src={img} alt=\"Clouds\" />\r\n\t\t\t\t\t\t<ForecastTemp>{temp}</ForecastTemp>\r\n\t\t\t\t\t</ContainerWeather>\r\n\t\t\t\t))}\r\n\t\t\t</ContainerForecast>\r\n\t\t</ContainerBottom>\r\n\t);\r\n};\r\n\r\nexport default Forecast;\r\n","// import React from 'react';\r\n// import { CITIES } from '../../constants/constants';\r\nimport styled from 'styled-components';\r\n\r\nimport ContainerBottom from '../../components/ContainerBottom/ContainerBottom';\r\nimport HeaderBottom from '../HeaderBottom/HeaderBottom';\r\n\r\nconst ContainerCities = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tfont-size: 1.5rem;\r\n\ttext-align: left;\r\n\twidth: 100%;\r\n\tletter-spacing: 2px;\r\n\tfont-weight: 400;\r\n\tfont-size: 1rem;\r\n`;\r\n\r\nconst CityName = styled.h3`\r\n\tfont-weight: 400;\r\n\twidth: 110px;\r\n\tletter-spacing: 1px;\r\n\tmargin: 0px;\r\n`;\r\n\r\nconst CityTemp = styled.div`\r\n\tfont-size: 1.25rem;\r\n\tcolor: rgba(0, 0, 0, 0.5);\r\n\tmargin-right: 10px;\r\n\twidth: 67px;\r\n`;\r\n\r\nconst OtherCities = ({ weather }) => {\r\n\tconsole.log(weather);\r\n\treturn (\r\n\t\t<ContainerBottom>\r\n\t\t\t<HeaderBottom>Other Cities</HeaderBottom>\r\n\t\t\t{weather.map((item) => {\r\n\t\t\t\tif (item)\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ContainerCities key={item.id}>\r\n\t\t\t\t\t\t\t<CityName>{item.name}</CityName>\r\n\t\t\t\t\t\t\t<CityTemp>{item.temp}</CityTemp>\r\n\t\t\t\t\t\t\t<img src={item.icon} alt=\"Clouds\" />\r\n\t\t\t\t\t\t</ContainerCities>\r\n\t\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ContainerBottom>\r\n\t);\r\n};\r\n\r\nexport default OtherCities;\r\n","import styled from 'styled-components';\r\n\r\nimport ContainerTop from '../../components/ContainerTop/ContainerTop';\r\n\r\nconst CityName = styled.div`\r\n\tmargin-top: 16px;\r\n\tfont-size: 2rem;\r\n\r\n\t&::after {\r\n\t\tcontent: '';\r\n\t\tborder: solid white 1px;\r\n\t\twidth: 60%;\r\n\t\tmargin: 10px auto;\r\n\t\tdisplay: block;\r\n\t}\r\n`;\r\n\r\nconst CurrentRight = ({city}) => (\r\n\t<ContainerTop>\r\n\t\t<CityName>{city}</CityName>\r\n\t</ContainerTop>\r\n);\r\n\r\nexport default CurrentRight;","export const CITIES = {\r\n\tMELBOURNE: {\r\n\t\tid: 2158177,\r\n\t\tname: 'Melbourne',\r\n\t\tstate: '',\r\n\t\tcountry: 'AU',\r\n\t\tcoord: {\r\n\t\t\tlon: 144.963318,\r\n\t\t\tlat: -37.813999,\r\n\t\t},\r\n\t},\r\n\tSYDNEY: {\r\n\t\tid: 2147714,\r\n\t\tname: 'Sydney',\r\n\t\tstate: '',\r\n\t\tcountry: 'AU',\r\n\t\tcoord: {\r\n\t\t\tlon: 151.207321,\r\n\t\t\tlat: -33.867851,\r\n\t\t},\r\n\t},\r\n\tBRISBANE: {\r\n\t\tid: 7839562,\r\n\t\tname: 'Brisbane',\r\n\t\tstate: '',\r\n\t\tcountry: 'AU',\r\n\t\tcoord: {\r\n\t\t\tlon: 153.029938,\r\n\t\t\tlat: -27.44573,\r\n\t\t},\r\n\t},\r\n\tPERTH:{\r\n\t\tid: 2153391,\r\n\t\tname: 'Perth',\r\n\t\tstate: '',\r\n\t\tcountry: 'AU',\r\n\t\tcoord: {\r\n\t\t\tlon: 115.872223,\r\n\t\t\tlat: -31.99884\r\n\t\t}\r\n\t},\r\n};\r\n\r\nexport const API = '999f0f8fefdcfd98119382216ae94e89';","import { API } from '../../constants/constants';\r\n\r\nconst getCurrentAndForecast = (cities, setWeather) => {\r\n\tconst base = 'https://api.openweathermap.org/data/2.5/onecall?';\r\n\tconst units = 'metric';\r\n\tconst exclude = 'minutely,hourly,alerts';\r\n\tlet data = [];\r\n\r\n\tconst xhttp = new XMLHttpRequest();\r\n\r\n\t(function loop(i, length) {\r\n\t\tif (i >= length) {\r\n\t\t\t// console.log(data);\r\n\t\t\tsetWeather(data);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst url = `${base}lat=${cities[i].lat}&lon=${cities[i].lon}&exclude=${exclude}&appid=${API}&units=${units}`;\r\n\t\txhttp.open('GET', url, true);\r\n\t\txhttp.onreadystatechange = function () {\r\n\t\t\tif (this.readyState == 4 && this.status == 200) {\r\n\t\t\t\tdata.push(JSON.parse(xhttp.responseText));\r\n\t\t\t\t// console.log(data[i]);\r\n\t\t\t\t// setWeather(data);\r\n\t\t\t\tloop(i + 1, length);\r\n\t\t\t}\r\n\t\t};\r\n\t\txhttp.send();\r\n\t})(0, cities.length);\r\n};\r\n\r\nexport default getCurrentAndForecast;\r\n","export const weekday = () => {\r\n\tconst d = new Date();\r\n\tconst n = d.getDay();\r\n\tconst weekdayList = [\r\n\t\t'MON',\r\n\t\t'TUE',\r\n\t\t'WED',\r\n\t\t'THU',\r\n\t\t'FRI',\r\n\t\t'SAT',\r\n\t\t'SUN',\r\n\t\t'MON',\r\n\t\t'TUE',\r\n\t\t'WED',\r\n\t\t'THU',\r\n\t\t'FRI',\r\n\t\t'SAT',\r\n\t\t'SUN',\r\n\t];\r\n\treturn weekdayList.slice(n, n + 5);\r\n};\r\n\r\nexport const weekList = (weekdayList, daily) => [\r\n\t{\r\n\t\tkey: weekdayList[0],\r\n\t\timg: `http://openweathermap.org/img/wn/${daily[0].weather[0].icon}.png`,\r\n\t\ttemp: `${Math.trunc(daily[0].temp.day)}°`,\r\n\t},\r\n\t{\r\n\t\tkey: weekdayList[1],\r\n\t\timg: `http://openweathermap.org/img/wn/${daily[1].weather[0].icon}.png`,\r\n\t\ttemp: `${Math.trunc(daily[1].temp.day)}°`,\r\n\t},\r\n\t{\r\n\t\tkey: weekdayList[2],\r\n\t\timg: `http://openweathermap.org/img/wn/${daily[2].weather[0].icon}.png`,\r\n\t\ttemp: `${Math.trunc(daily[2].temp.day)}°`,\r\n\t},\r\n\t{\r\n\t\tkey: weekdayList[3],\r\n\t\timg: `http://openweathermap.org/img/wn/${daily[3].weather[0].icon}.png`,\r\n\t\ttemp: `${Math.trunc(daily[3].temp.day)}°`,\r\n\t},\r\n\t{\r\n\t\tkey: weekdayList[4],\r\n\t\timg: `http://openweathermap.org/img/wn/${daily[4].weather[0].icon}.png`,\r\n\t\ttemp: `${Math.trunc(daily[4].temp.day)}°`,\r\n\t},\r\n];\r\n","// import logo from './logo.svg';\n// import './App.css';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { nanoid } from 'nanoid';\n\nimport CurrentLeft from './app/CurrentLeft/CurrentLeft';\nimport Forecast from './app/Forecast/Forecast';\nimport OtherCities from './app/OtherCities/OtherCities';\nimport CurrentRight from './app/CurrentRight/CurrentRight';\n\n// import getCurrentWeather from './api/getCurrentWeather/getCurrentWeather';\nimport getCurrentAndForecast from './api/getCurrentAndForecast/getCurrentAndForecast';\nimport { CITIES } from './constants/constants';\nimport { weekday, weekList } from './utils/weekConfig';\n\n// import ContainerBottom from './components/ContainerBottom/ContainerBottom';\n\nconst Container = styled.div`\n\twidth: 100%;\n\tmin-height: 100vh;\n\tbackground-image: url(https://wallpaperaccess.com/full/2629319.png);\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\tbackground-position: center;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nconst Card = styled.div`\n\tmargin: 60px;\n\tbackground: #fff;\n\tborder-radius: 32px;\n\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n`;\n\nconst CardTop = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tpadding: ${(props) => (props.padding ? '80px 80px' : '64px 0')};\n\tbackground-image: url(https://i.imgur.com/GhQZhaO.jpg);\n\tbackground-size: cover;\n\tborder-top-left-radius: 32px;\n\tborder-top-right-radius: 32px;\n\tcolor: #fff;\n\tposition: relative;\n`;\n\nconst CardBottom = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tpadding: 36px 0;\n}\n`;\n\nconst DividerBottom = styled.div`\n\twidth: 3px;\n\tbackground-color: rgba(0, 0, 0, 0.1);\n`;\n\nconst cities = [\n\t{\n\t\tname: CITIES.MELBOURNE.name,\n\t\tlat: CITIES.MELBOURNE.coord.lat,\n\t\tlon: CITIES.MELBOURNE.coord.lon,\n\t},\n\t{\n\t\tname: CITIES.SYDNEY.name,\n\t\tlat: CITIES.SYDNEY.coord.lat,\n\t\tlon: CITIES.SYDNEY.coord.lon,\n\t},\n\t{\n\t\tname: CITIES.BRISBANE.name,\n\t\tlat: CITIES.BRISBANE.coord.lat,\n\t\tlon: CITIES.BRISBANE.coord.lon,\n\t},\n\t{\n\t\tname: CITIES.PERTH.name,\n\t\tlat: CITIES.PERTH.coord.lat,\n\t\tlon: CITIES.PERTH.coord.lon,\n\t},\n];\n\nconst defaultCity = CITIES.MELBOURNE.name;\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tweather: undefined,\n\t\t\tdefaultWeather: undefined,\n\t\t};\n\n\t\tthis.setWeather = this.setWeather.bind(this);\n\t}\n\n\tsetWeather(newWeather) {\n\t\tthis.setState({\n\t\t\tweather: newWeather.filter((item) => item.name !== defaultCity),\n\t\t\tdefaultWeather: newWeather[this.defaultIndex],\n\t\t});\n\t\t// console.log(newWeather);\n\t}\n\n\tdefaultIndex = cities.findIndex((item) => item.name === defaultCity);\n\n\tcomponentDidMount() {\n\t\tlet output = [];\n\n\t\tgetCurrentAndForecast(cities, (data) => {\n\t\t\tdata.forEach((item, index) => {\n\t\t\t\toutput.push({\n\t\t\t\t\tid: nanoid(),\n\t\t\t\t\tname: cities[index].name,\n\t\t\t\t\ttemp: `${Math.trunc(item.current.temp)}°`,\n\t\t\t\t\tweather: item.current.weather[0].main,\n\t\t\t\t\thumidity: `${item.current.humidity} %`,\n\t\t\t\t\twind: `${item.current.wind_speed} M/S`,\n\t\t\t\t\ticon: `http://openweathermap.org/img/wn/${item.current.weather[0].icon}.png`,\n\t\t\t\t\tdaily: weekList(weekday(), item.daily),\n\t\t\t\t});\n\t\t\t\tconsole.log(output);\n\t\t\t});\n\t\t\tthis.setWeather(output);\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { weather, defaultWeather } = this.state;\n\t\t// if (weather) {\n\t\t// \tconsole.log(weather);\n\t\t// \tconsole.log(weather.length);\n\t\t// }\n\n\t\tif (!weather) {\n\t\t\t// return 'LOADING......';\n\t\t\treturn (\n\t\t\t\t<Container>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<CardTop padding>LOADING......</CardTop>\n\t\t\t\t\t\t<CardBottom>LOADING......</CardBottom>\n\t\t\t\t\t</Card>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTop>\n\t\t\t\t\t\t<CurrentLeft\n\t\t\t\t\t\t\ttemp={defaultWeather.temp}\n\t\t\t\t\t\t\tweather={defaultWeather.weather}\n\t\t\t\t\t\t\thumidity={defaultWeather.humidity}\n\t\t\t\t\t\t\twind={defaultWeather.wind}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CurrentRight city={defaultWeather.name} />\n\t\t\t\t\t</CardTop>\n\t\t\t\t\t<CardBottom>\n\t\t\t\t\t\t<OtherCities weather={weather} />\n\t\t\t\t\t\t<DividerBottom />\n\t\t\t\t\t\t<Forecast daily={defaultWeather.daily} />\n\t\t\t\t\t</CardBottom>\n\t\t\t\t</Card>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}